{"ast":null,"code":"import dayjs from\"dayjs\";import AppointmentDetailContainer from\"pages/agendas/AppointmentDetailContainer\";import NewAppointmentFormContainer from\"pages/agendas/NewAppointmentFormContainer\";import React from\"react\";import{withTranslation}from\"react-i18next\";import enumAppointmentStatusNew from\"types/enums/EnumAppointmentStatusNew\";import EventHub,{Event}from\"utils/eventHub\";import{Rest}from\"utils/utils\";import View from\"./NuevaCita\";import _ from\"lodash\";import utc from\"dayjs/plugin/utc\";import timezone from\"dayjs/plugin/timezone\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";class NuevaCitaContainer extends React.Component{constructor(){super(...arguments);this.calendarComponentRef=/*#__PURE__*/React.createRef();this.state={};this.eventRefPrestadorCard=void 0;this.onCheck=checked=>{var _this$calendarCompone;this.setState({checked:checked.target.checked});(_this$calendarCompone=this.calendarComponentRef.current)===null||_this$calendarCompone===void 0?void 0:_this$calendarCompone.getApi().refetchEvents();};this.loadData=(idProvider,dateStart)=>{Rest().operation({type:\"SelectNomenclatorsList\"}).then(response=>{this.setState({services:this.buildServiceStruct(response?response:[]),forceProviderPhotoReloadKey:new Date().getTime(),loaded:true},()=>{this.setState({calendarHeight:\"calc(100vh - 240px)\"});if(idProvider){this.calendarComponentRef.current.getApi().changeView(\"timeGridDay\",dateStart);this.calendarComponentRef.current.getApi().refetchEvents();}});});};this.buildServiceStruct=services=>{return _(services).groupBy(\"idSpeciality\").map(especialidadGroup=>({value:especialidadGroup[0].idSpeciality.toString(),label:especialidadGroup[0].nameSpeciality,children:_(especialidadGroup).groupBy(\"idSubspeciality\").map(subespecialidadGroup=>({value:subespecialidadGroup[0].idSubspeciality.toString(),label:subespecialidadGroup[0].nameSubspeciality,children:_(subespecialidadGroup).map(acto=>({valueDuration:acto.valueDuration,value:acto.idAct.toString(),label:acto.nameAct})).orderBy(\"label\",\"asc\").value()})).orderBy(\"label\",\"asc\").value()})).orderBy(\"label\",\"asc\").value();};this.selectNomenclator=(idSpeciality,idSubspeciality,idAct,nameSpeciality,nameSubespeciality,nameAct,duration)=>{this.setState({idEspecialidad:idSpeciality,idSubespecialidad:idSubspeciality,idActo:idAct,idService:[idSpeciality,idSubspeciality,idAct,duration],service:[nameSpeciality,nameSubespeciality,nameAct]},()=>{idSpeciality!==undefined&&this.calendarComponentRef.current.getApi().refetchEvents();});};this.events=(info,successCallback)=>{Rest().operation({type:\"GetProviderSchedulesSlots\",dateStart:info.start,dateEnd:info.end,idEspecialidad:this.state.idEspecialidad,idSubespecialidad:this.state.idSubespecialidad,idActo:this.state.idActo},true).then(response=>{successCallback(this.setEventStruct(response));});};this.setEventStruct=allEvents=>{const events=[];dayjs.extend(utc);dayjs.extend(timezone);// Se utiliza para quitar duplicados y solo coger uno por dia, y hora\nconst horariosUnicos=Array.from(allEvents.slots.reduce((map,horario)=>{const key=\"\".concat(horario.valueDay,\"-\").concat(horario.valueStart,\"-\").concat(horario.valueEnd);// Si la clave ya existe, incrementamos el contador\nif(map.has(key)){map.get(key).count+=1;}else{// Si no existe, creamos un nuevo objeto con count en 1\nmap.set(key,{horario,count:1});}return map;},new Map()).values());horariosUnicos.forEach(slots=>{const slot=slots.horario;const count=slots.count;let i=slot.valueStart;while(i<slot.valueEnd){const dateStart=dayjs(slot.date);const dateStarta=dateStart.minute(i).toDate();const dateEnd=dayjs(dayjs(slot.date).format(\"DD/MM/YYYY\"),\"DD/MM/YYYY\").toDate();dateEnd.setMinutes(i+slot.valueInterval);let appointmentStatus=\"green\";const citasFiltradas=(allEvents.appointments||[]).filter(cita=>{return new Date(cita.dateAppointment).getTime()===new Date(slot.date).getTime();});let counter=0;citasFiltradas.some(cita=>{const citaFecha=dayjs(cita.dateAppointment).minute(cita.valueTime).toDate();const citaHasta=dayjs(citaFecha).add(cita.valueDuration,'minute').toDate();if(dateStarta.getTime()>=citaFecha.getTime()&&dateEnd.getTime()<=citaHasta.getTime()){// Poner mas condiciones\nif(counter<count){counter+=1;// Si no hemos alcanzado el mÃ¡ximo de medicos, incrementamos\n}}});if(counter===count)appointmentStatus=\"red\";else if(counter>0)appointmentStatus=\"yellow\";switch(appointmentStatus){case\"green\":appointmentStatus=\"#77DD77\";break;case\"yellow\":appointmentStatus=\"rgb(237, 218, 11)\";break;case\"red\":appointmentStatus=\"#FF6961\";break;default:appointmentStatus=\"#77DD77\";break;};events.push({start:dateStarta,end:dateEnd,extendedProps:{idScheduleSlot:slot.idScheduleSlot},display:\"background\",borderColor:appointmentStatus,backgroundColor:appointmentStatus});i+=slot.valueInterval;}});// Si el checkbox esta en true, se muestan las citas creadas\nif(this.state.checked){var _allEvents$appointmen;(_allEvents$appointmen=allEvents.appointments)===null||_allEvents$appointmen===void 0?void 0:_allEvents$appointmen.forEach(appointment=>{const dateStart=dayjs(dayjs(appointment.dateAppointment).format(\"DD/MM/YYYY\"),\"DD/MM/YYYY\").toDate();dateStart.setMinutes(appointment.valueTime);const dateEnd=dayjs(dayjs(appointment.dateAppointment).format(\"DD/MM/YYYY\"),\"DD/MM/YYYY\").toDate();dateEnd.setMinutes(appointment.valueTime+appointment.valueDuration);let appointmentStatus=\"confirmed\";switch(appointment.typeStatus){case enumAppointmentStatusNew.PROPOSED:appointmentStatus=\"proposed\";break;case enumAppointmentStatusNew.CANCELLED:appointmentStatus=\"cancelled\";break;case 5:appointmentStatus=\"payment\";break;case enumAppointmentStatusNew.DONE:appointmentStatus=\"done\";break;default:break;}events.push({title:appointment.namePatient+\" \"+(appointment.nameSurname1?\" \"+appointment.nameSurname1:\"\")+(appointment.nameSurname2?\" \"+appointment.nameSurname2:\"\"),start:dateStart,end:dateEnd,extendedProps:{idAppointment:appointment.idAppointment},className:appointmentStatus});});}return events;};this.eventClick=info=>{if(info.event.extendedProps.idAppointment){this.setState({appointmentDetailVisible:true,appointmentDetailKey:new Date().getTime(),idAppointmentSelected:info.event.extendedProps.idAppointment});}else{this.setState({newAppointmentFormVisible:true,newAppointmentFormKey:new Date().getTime(),//idScheduleSlotSelected: info.event.extendedProps.idScheduleSlot,\ndateSelected:info.event.start});}};this.dateClick=info=>{if(!this.state.idAppointmentSelected&&!this.state.idScheduleSlotSelected){this.setState({newAppointmentFormVisible:true,newAppointmentFormKey:new Date().getTime(),dateSelected:info.date,typeCalendarClick:info.view.type});}};this.dateSet=dateInfo=>{if(dayjs().isAfter(dayjs(dateInfo.start))&&dayjs().isBefore(dayjs(dateInfo.end))){var _this$calendarCompone2;(_this$calendarCompone2=this.calendarComponentRef.current)===null||_this$calendarCompone2===void 0?void 0:_this$calendarCompone2.getApi().scrollToTime(dayjs().subtract(1,\"hour\").format(\"HH:mm:ss\"));}else{var _this$calendarCompone3;(_this$calendarCompone3=this.calendarComponentRef.current)===null||_this$calendarCompone3===void 0?void 0:_this$calendarCompone3.getApi().scrollToTime(\"08:00:00\");}};this.closeNewAppointmentModal=save=>{this.setState({newAppointmentFormVisible:false,idScheduleSlotSelected:undefined,dateSelected:undefined,typeCalendarClick:undefined},()=>{//this.selectProvider(this.state.idProviderSelected!);\n});};this.closeAppointmentDetail=save=>{this.setState({appointmentDetailVisible:false,idAppointmentSelected:undefined},()=>{//this.selectProvider(this.state.idProviderSelected!);\n});};}componentDidMount(){this.eventRefPrestadorCard=EventHub.on(Event.OPEN_PROVIDER_CALENDAR,parameters=>{this.loadData(parameters.idPrestador,parameters.date);});this.loadData();}render(){return this.state.loaded?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(View,{...this.state,calendarComponentRef:this.calendarComponentRef//selectOrganization={this.selectOrganization}\n//filterOptions={this.filterOptions}\n,events:this.events,eventClick:this.eventClick,dateClick:this.dateClick,dateSet:this.dateSet,selectNomenclator:this.selectNomenclator,onCheck:this.onCheck}),/*#__PURE__*/_jsx(NewAppointmentFormContainer,{visible:this.state.newAppointmentFormVisible//idProvider={this.state.idProviderSelected}\n//idScheduleSlot={this.state.idScheduleSlotSelected}\n,date:this.state.dateSelected,typeCalendarClick:this.state.typeCalendarClick,onClose:this.closeNewAppointmentModal,nuevaCita:true,idService:this.state.idService,service:this.state.service},this.state.newAppointmentFormKey),/*#__PURE__*/_jsx(AppointmentDetailContainer,{visible:this.state.appointmentDetailVisible,idAppointment:this.state.idAppointmentSelected,onClose:this.closeAppointmentDetail,nuevaCita:true,idService:this.state.idService,service:this.state.service},this.state.appointmentDetailKey)]}):/*#__PURE__*/_jsx(_Fragment,{});}}export default withTranslation(\"newSchedule\")(NuevaCitaContainer);","map":{"version":3,"names":["dayjs","AppointmentDetailContainer","NewAppointmentFormContainer","React","withTranslation","enumAppointmentStatusNew","EventHub","Event","Rest","View","_","utc","timezone","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","NuevaCitaContainer","Component","constructor","arguments","calendarComponentRef","createRef","state","eventRefPrestadorCard","onCheck","checked","_this$calendarCompone","setState","target","current","getApi","refetchEvents","loadData","idProvider","dateStart","operation","type","then","response","services","buildServiceStruct","forceProviderPhotoReloadKey","Date","getTime","loaded","calendarHeight","changeView","groupBy","map","especialidadGroup","value","idSpeciality","toString","label","nameSpeciality","children","subespecialidadGroup","idSubspeciality","nameSubspeciality","acto","valueDuration","idAct","nameAct","orderBy","selectNomenclator","nameSubespeciality","duration","idEspecialidad","idSubespecialidad","idActo","idService","service","undefined","events","info","successCallback","start","dateEnd","end","setEventStruct","allEvents","extend","horariosUnicos","Array","from","slots","reduce","horario","key","concat","valueDay","valueStart","valueEnd","has","get","count","set","Map","values","forEach","slot","i","date","dateStarta","minute","toDate","format","setMinutes","valueInterval","appointmentStatus","citasFiltradas","appointments","filter","cita","dateAppointment","counter","some","citaFecha","valueTime","citaHasta","add","push","extendedProps","idScheduleSlot","display","borderColor","backgroundColor","_allEvents$appointmen","appointment","typeStatus","PROPOSED","CANCELLED","DONE","title","namePatient","nameSurname1","nameSurname2","idAppointment","className","eventClick","event","appointmentDetailVisible","appointmentDetailKey","idAppointmentSelected","newAppointmentFormVisible","newAppointmentFormKey","dateSelected","dateClick","idScheduleSlotSelected","typeCalendarClick","view","dateSet","dateInfo","isAfter","isBefore","_this$calendarCompone2","scrollToTime","subtract","_this$calendarCompone3","closeNewAppointmentModal","save","closeAppointmentDetail","componentDidMount","on","OPEN_PROVIDER_CALENDAR","parameters","idPrestador","render","visible","onClose","nuevaCita"],"sources":["/home/gpt2008/Desktop/Clubs/club/club/club-ui/src/pages/cita/NuevaCitaContainer.tsx"],"sourcesContent":["import { DatesSetArg } from \"@fullcalendar/core\";\nimport dayjs from \"dayjs\";\nimport AppointmentDetailContainer from \"pages/agendas/AppointmentDetailContainer\";\nimport NewAppointmentFormContainer from \"pages/agendas/NewAppointmentFormContainer\";\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport Appointment from \"types/entities/Appointment\";\nimport Slot from \"types/entities/Slot\";\nimport enumAppointmentStatusNew from \"types/enums/EnumAppointmentStatusNew\";\nimport EventHub, { Event } from \"utils/eventHub\";\nimport { Rest } from \"utils/utils\";\nimport View from \"./NuevaCita\";\nimport NomenclatorDetails from \"types/entities/Nomenclator\";\nimport _ from \"lodash\";\nimport utc from \"dayjs/plugin/utc\";\nimport timezone from \"dayjs/plugin/timezone\";\nimport { width } from \"@fortawesome/free-solid-svg-icons/faAddressBook\";\n\nexport interface IState {\n\tloaded?: boolean;\n\tidProviderSelected?: number;\n\tforceProviderPhotoReloadKey?: number;\n\tcalendarHeight?: number | string;\n\tappointmentDetailVisible?: boolean;\n\tnewAppointmentFormVisible?: boolean;\n\tnewAppointmentFormKey?: number;\n\tappointmentDetailKey?: number;\n\tidScheduleSlotSelected?: number;\n\tidAppointmentSelected?: number;\n\tdateSelected?: Date;\n\ttypeCalendarClick?: string;\n    idEspecialidad?: number;\n    idSubespecialidad?: number;\n    idActo?: number;\n\tidService?: number[];\n\tservice?: string[];\n\tservices?: NomenclatorDetails[];\n\tchecked?: boolean;\n}\n\nclass NuevaCitaContainer extends React.Component<WithTranslation, IState> {\n\tcalendarComponentRef: any = React.createRef();\n\n\tpublic state: IState = {};\n\n\tprivate eventRefPrestadorCard?: string;\n\n\tpublic componentDidMount() {\n\t\tthis.eventRefPrestadorCard = EventHub.on(Event.OPEN_PROVIDER_CALENDAR, (parameters: any) => {\n\t\t\tthis.loadData(parameters.idPrestador, parameters.date);\n\t\t});\n        this.loadData();\n\t}\n\n\tpublic render() {\n\t\treturn this.state.loaded ? (\n\t\t\t<>\n\t\t\t\t<View\n\t\t\t\t\t{...this.state}\n\t\t\t\t\tcalendarComponentRef={this.calendarComponentRef}\n\t\t\t\t\t//selectOrganization={this.selectOrganization}\n\t\t\t\t\t//filterOptions={this.filterOptions}\n\t\t\t\t\tevents={this.events}\n\t\t\t\t\teventClick={this.eventClick}\n\t\t\t\t\tdateClick={this.dateClick}\n\t\t\t\t\tdateSet={this.dateSet}\n                    selectNomenclator={this.selectNomenclator}\n\t\t\t\t\tonCheck={this.onCheck}\n\t\t\t\t/>\n\n\t\t\t\t{/* New appointment form */}\n\t\t\t\t<NewAppointmentFormContainer\n\t\t\t\t\tkey={this.state.newAppointmentFormKey}\n\t\t\t\t\tvisible={this.state.newAppointmentFormVisible}\n\t\t\t\t\t//idProvider={this.state.idProviderSelected}\n\t\t\t\t\t//idScheduleSlot={this.state.idScheduleSlotSelected}\n\t\t\t\t\tdate={this.state.dateSelected}\n\t\t\t\t\ttypeCalendarClick={this.state.typeCalendarClick}\n\t\t\t\t\tonClose={this.closeNewAppointmentModal}\n\t\t\t\t\tnuevaCita={true}\n\t\t\t\t\tidService={this.state.idService}\n\t\t\t\t\tservice={this.state.service}\n\t\t\t\t/>\n\n\t\t\t\t{/* Appointment detail */}\n\t\t\t\t<AppointmentDetailContainer\n\t\t\t\t\tkey={this.state.appointmentDetailKey}\n\t\t\t\t\tvisible={this.state.appointmentDetailVisible}\n\t\t\t\t\tidAppointment={this.state.idAppointmentSelected}\n\t\t\t\t\tonClose={this.closeAppointmentDetail}\n\t\t\t\t\tnuevaCita={true}\n\t\t\t\t\tidService={this.state.idService}\n\t\t\t\t\tservice={this.state.service}\n\t\t\t\t/>\n\t\t\t</>\n\t\t) : (\n\t\t\t<></>\n\t\t);\n\t}\n\n\tprivate onCheck = (checked: any) => {\n\t\tthis.setState({\n\t\t\tchecked: checked.target.checked\n\t\t})\n\t\tthis.calendarComponentRef.current?.getApi().refetchEvents();\n\t};\n\n\tprivate loadData = (idProvider?: number, dateStart?: Date) => {\n        Rest<{ type: string;}, NomenclatorDetails[]>()\n\t\t\t.operation({\n\t\t\t\ttype: \"SelectNomenclatorsList\",\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tservices: this.buildServiceStruct(response ? response : []),\n\t\t\t\t\t\tforceProviderPhotoReloadKey: new Date().getTime(),\n\t\t\t\t\t\tloaded: true,\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.setState({ calendarHeight: \"calc(100vh - 240px)\" });\n\t\t\t\t\t\tif (idProvider) {\n\t\t\t\t\t\t\tthis.calendarComponentRef.current.getApi().changeView(\"timeGridDay\", dateStart);\n\t\t\t\t\t\t\tthis.calendarComponentRef.current.getApi().refetchEvents();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t};\n\n    private buildServiceStruct = (services: NomenclatorDetails[]) => {\n        return _(services)\n        .groupBy(\"idSpeciality\")\n        .map((especialidadGroup) => ({\n            value: especialidadGroup[0].idSpeciality.toString(),\n            label: especialidadGroup[0].nameSpeciality,\n            children: _(especialidadGroup)\n                .groupBy(\"idSubspeciality\")\n                .map((subespecialidadGroup) => ({\n                    value: subespecialidadGroup[0].idSubspeciality.toString(),\n                    label: subespecialidadGroup[0].nameSubspeciality,\n                    children: _(subespecialidadGroup)\n                        .map((acto) => ({\n                            valueDuration: acto.valueDuration,\n                            value: acto.idAct.toString(),\n                            label: acto.nameAct,\n                        }))\n                    .orderBy(\"label\", \"asc\")\n                    .value(),\n                }))\n                .orderBy(\"label\", \"asc\")\n                .value(),\n        }))\n        .orderBy(\"label\", \"asc\")\n        .value() as NomenclatorDetails[];\n\t};\n\n    private selectNomenclator = (idSpeciality?: number, idSubspeciality?: number, idAct?: number,\n\t\t\t\t\t\t\t\tnameSpeciality?: string, nameSubespeciality?: string, nameAct?: string, duration?:number ) => {\n        this.setState({\n            idEspecialidad: idSpeciality,\n            idSubespecialidad: idSubspeciality,\n            idActo: idAct,\n\t\t\tidService: [idSpeciality!,idSubspeciality!,idAct!, duration!],\n\t\t\tservice:[nameSpeciality!,nameSubespeciality!,nameAct!]\n        }, () => {\n\t\t\tidSpeciality !== undefined && this.calendarComponentRef.current.getApi().refetchEvents();\n\t\t}\n\t\t)\n    };\n\n\tprivate events = (info: any, successCallback: any) => {\n\t\tRest<{ type: string; dateStart: Date; dateEnd: Date, idEspecialidad?: number, idSubespecialidad?: number, idActo?: number, }, any>()\n\t\t\t.operation(\n\t\t\t\t{\n\t\t\t\t\ttype: \"GetProviderSchedulesSlots\",\n\t\t\t\t\tdateStart: info.start,\n\t\t\t\t\tdateEnd: info.end,\n\t\t\t\t\tidEspecialidad: this.state.idEspecialidad,\n\t\t\t\t\tidSubespecialidad: this.state.idSubespecialidad,\n\t\t\t\t\tidActo: this.state.idActo\n\t\t\t\t},\n\t\t\t\ttrue\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tsuccessCallback(this.setEventStruct(response));\n\t\t\t});\n\t};\n\n\tprivate setEventStruct = (allEvents: any) => {\n\t\tconst events: any = [];\n\t\tdayjs.extend(utc);\n\t\tdayjs.extend(timezone);\n\t\t// Se utiliza para quitar duplicados y solo coger uno por dia, y hora\n\t\tconst horariosUnicos = Array.from(\n\t\t\tallEvents.slots.reduce((map:any, horario:Slot) => {\n\t\t\t\tconst key = `${horario.valueDay}-${horario.valueStart}-${horario.valueEnd}`;\n\n\t\t\t  // Si la clave ya existe, incrementamos el contador\n\t\t\t\tif (map.has(key)) {\n\t\t\t\t\tmap.get(key).count += 1;\n\t\t\t\t} else {\n\t\t\t\t\t// Si no existe, creamos un nuevo objeto con count en 1\n\t\t\t\t\tmap.set(key, { horario, count: 1 });\n\t\t\t\t}\n\t\t\t\treturn map;\n\t\t\t}, new Map()).values()\n\t\t);\n\t\t\n\t\thorariosUnicos.forEach((slots: any) => {\n\t\t\tconst slot = slots.horario;\n\t\t\tconst count = slots.count;\n\t\t\tlet i = slot.valueStart;\n\t\t\twhile (i < slot.valueEnd) {\n\t\t\t\tconst dateStart = dayjs(slot.date);\n\t\t\t\tconst dateStarta = dateStart.minute(i).toDate();\n\n\t\t\t\tconst dateEnd = dayjs(dayjs(slot.date).format(\"DD/MM/YYYY\"), \"DD/MM/YYYY\").toDate();\n\t\t\t\tdateEnd.setMinutes(i + slot.valueInterval);\n\n\t\t\t\tlet appointmentStatus = \"green\";\n\t\t\t\tconst citasFiltradas = (allEvents.appointments || []).filter((cita: any) => {\n\t\t\t\t\treturn new Date(cita.dateAppointment).getTime() === new Date(slot.date).getTime();\n\t\t\t\t});\n\n\t\t\t\tlet counter = 0;\n\t\t\t\tcitasFiltradas.some((cita: any) => {\n\t\t\t\t\tconst citaFecha = dayjs(cita.dateAppointment).minute(cita.valueTime).toDate();\n\t\t\t\t\tconst citaHasta = dayjs(citaFecha).add(cita.valueDuration, 'minute').toDate();\n\t\t\t\t\tif (dateStarta.getTime() >= citaFecha.getTime() && dateEnd.getTime() <= citaHasta.getTime()){ // Poner mas condiciones\n\t\t\t\t\t\tif (counter < count) {\n\t\t\t\t\t\t\tcounter += 1; // Si no hemos alcanzado el mÃ¡ximo de medicos, incrementamos\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (counter === count) appointmentStatus = \"red\";\n\t\t\t\telse if (counter > 0) appointmentStatus = \"yellow\";\n\t\t\t\t  \n\t\t\t\tswitch (appointmentStatus) {\n\t\t\t\t\tcase \"green\":\n\t\t\t\t\t\tappointmentStatus = \"#77DD77\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"yellow\":\n\t\t\t\t\t\tappointmentStatus = \"rgb(237, 218, 11)\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"red\":\n\t\t\t\t\t\tappointmentStatus = \"#FF6961\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tappointmentStatus = \"#77DD77\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t};\n\n\t\t\t\tevents.push({\n\t\t\t\t\tstart: dateStarta,\n\t\t\t\t\tend: dateEnd,\n\t\t\t\t\textendedProps: { idScheduleSlot: slot.idScheduleSlot },\n\t\t\t\t\tdisplay: \"background\",\n\t\t\t\t\tborderColor: appointmentStatus,\n\t\t\t\t\tbackgroundColor: appointmentStatus \n\t\t\t\t});\n\t\t\t\ti += slot.valueInterval;\n\t\t\t}\n\t\t});\n\n\t\t// Si el checkbox esta en true, se muestan las citas creadas\n\t\tif (this.state.checked) {\n\t\t\tallEvents.appointments?.forEach((appointment: Appointment) => {\n\t\t\t\tconst dateStart = dayjs(\n\t\t\t\t\tdayjs(appointment.dateAppointment).format(\"DD/MM/YYYY\"),\n\t\t\t\t\t\"DD/MM/YYYY\"\n\t\t\t\t).toDate();\n\t\t\t\tdateStart.setMinutes(appointment.valueTime);\n\n\t\t\t\tconst dateEnd = dayjs(\n\t\t\t\t\tdayjs(appointment.dateAppointment).format(\"DD/MM/YYYY\"),\n\t\t\t\t\t\"DD/MM/YYYY\"\n\t\t\t\t).toDate();\n\t\t\t\tdateEnd.setMinutes(appointment.valueTime + appointment.valueDuration);\n\n\t\t\t\tlet appointmentStatus = \"confirmed\";\n\n\t\t\t\tswitch (appointment.typeStatus) {\n\t\t\t\t\tcase enumAppointmentStatusNew.PROPOSED:\n\t\t\t\t\t\tappointmentStatus = \"proposed\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase enumAppointmentStatusNew.CANCELLED:\n\t\t\t\t\t\tappointmentStatus = \"cancelled\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tappointmentStatus = \"payment\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase enumAppointmentStatusNew.DONE:\n\t\t\t\t\t\tappointmentStatus = \"done\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tevents.push({\n\t\t\t\t\ttitle:\n\t\t\t\t\t\tappointment.namePatient +\n\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\t(appointment.nameSurname1 ? \" \" + appointment.nameSurname1 : \"\") +\n\t\t\t\t\t\t(appointment.nameSurname2 ? \" \" + appointment.nameSurname2 : \"\"),\n\t\t\t\t\tstart: dateStart,\n\t\t\t\t\tend: dateEnd,\n\t\t\t\t\textendedProps: { idAppointment: appointment.idAppointment },\n\t\t\t\t\tclassName: appointmentStatus,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn events;\n\t};\n\n\tprivate eventClick = (info: any) => {\n\t\tif (info.event.extendedProps.idAppointment) {\n\t\t\tthis.setState({\n\t\t\t\tappointmentDetailVisible: true,\n\t\t\t\tappointmentDetailKey: new Date().getTime(),\n\t\t\t\tidAppointmentSelected: info.event.extendedProps.idAppointment,\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tnewAppointmentFormVisible: true,\n\t\t\t\tnewAppointmentFormKey: new Date().getTime(),\n\t\t\t\t//idScheduleSlotSelected: info.event.extendedProps.idScheduleSlot,\n\t\t\t\tdateSelected: info.event.start,\n\t\t\t});\n\t\t}\n\t};\n\n\tprivate dateClick = (info: any) => {\n\t\tif (!this.state.idAppointmentSelected && !this.state.idScheduleSlotSelected) {\n\t\t\tthis.setState({\n\t\t\t\tnewAppointmentFormVisible: true,\n\t\t\t\tnewAppointmentFormKey: new Date().getTime(),\n\t\t\t\tdateSelected: info.date,\n\t\t\t\ttypeCalendarClick: info.view.type,\n\t\t\t});\n\t\t}\n\t};\n\n\tprivate dateSet = (dateInfo: DatesSetArg) => {\n\t\tif (dayjs().isAfter(dayjs(dateInfo.start)) && dayjs().isBefore(dayjs(dateInfo.end))) {\n\t\t\tthis.calendarComponentRef.current\n\t\t\t\t?.getApi()\n\t\t\t\t.scrollToTime(dayjs().subtract(1, \"hour\").format(\"HH:mm:ss\"));\n\t\t} else {\n\t\t\tthis.calendarComponentRef.current?.getApi().scrollToTime(\"08:00:00\");\n\t\t}\n\t};\n\n\tprivate closeNewAppointmentModal = (save: boolean) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tnewAppointmentFormVisible: false,\n\t\t\t\tidScheduleSlotSelected: undefined,\n\t\t\t\tdateSelected: undefined,\n\t\t\t\ttypeCalendarClick: undefined,\n\t\t\t},\n\t\t\t() => {\n\t\t\t\t//this.selectProvider(this.state.idProviderSelected!);\n\t\t\t}\n\t\t);\n\t};\n\n\tprivate closeAppointmentDetail = (save: boolean) => {\n\t\tthis.setState({ appointmentDetailVisible: false, idAppointmentSelected: undefined }, () => {\n\t\t\t//this.selectProvider(this.state.idProviderSelected!);\n\t\t});\n\t};\n}\n\nexport default withTranslation(\"newSchedule\")(NuevaCitaContainer);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}