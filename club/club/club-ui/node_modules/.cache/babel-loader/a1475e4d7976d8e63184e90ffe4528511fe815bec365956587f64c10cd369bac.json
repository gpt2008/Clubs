{"ast":null,"code":"import dayjs from\"dayjs\";import i18n from\"../i18n/i18n\";export default{formatDateDayAndMonth(date){var today=date.format(\"LL\");return today.replace(date.format(\"YYYY\"),\"\")// remove year\n.replace(/\\s\\s+/g,\" \")// remove double spaces, if any\n.trim()// remove spaces from the start and the end\n.replace(/[рг]\\./,\"\")// remove year letter from RU/UK locales\n.replace(/de$/,\"\")// remove year prefix from PT\n.replace(/b\\.$/,\"\")// remove year prefix from SE\n.trim()// remove spaces from the start and the end\n.replace(/,$/g,\"\");// remove comma from the end\n},formatAmount(n,currency){const formatter=new Intl.NumberFormat(i18n.language,{style:\"currency\",currency:currency||\"EUR\"});return formatter.format(n);},dateToString(date){return date&&date.toLocaleDateString();},getTime(mins){const hours=Math.floor(mins/60);const minutes=mins%60;const time=(hours<10?\"0\":\"\")+hours+\":\"+(minutes<10?\"0\":\"\")+minutes;return dayjs(time,\"HH:mm\");},formatPorcentage(value){return typeof value!==\"undefined\"&&value.toLocaleString(undefined,{minimumFractionDigits:2})+\" %\";},roundFormatPorcentage(value){return typeof value!==\"undefined\"&&Math.sign(value)*Math.floor(Math.abs(value)+0.5)+\" %\";}};","map":{"version":3,"names":["dayjs","i18n","formatDateDayAndMonth","date","today","format","replace","trim","formatAmount","n","currency","formatter","Intl","NumberFormat","language","style","dateToString","toLocaleDateString","getTime","mins","hours","Math","floor","minutes","time","formatPorcentage","value","toLocaleString","undefined","minimumFractionDigits","roundFormatPorcentage","sign","abs"],"sources":["/home/gpt2008/Desktop/Clubs/club/club/club-ui/src/utils/functions.tsx"],"sourcesContent":["import dayjs from \"dayjs\";\nimport i18n from \"../i18n/i18n\";\n\nexport default {\n  formatDateDayAndMonth(date: dayjs.Dayjs) {\n    var today = date.format(\"LL\");\n    return today\n      .replace(date.format(\"YYYY\"), \"\") // remove year\n      .replace(/\\s\\s+/g, \" \") // remove double spaces, if any\n      .trim() // remove spaces from the start and the end\n      .replace(/[рг]\\./, \"\") // remove year letter from RU/UK locales\n      .replace(/de$/, \"\") // remove year prefix from PT\n      .replace(/b\\.$/, \"\") // remove year prefix from SE\n      .trim() // remove spaces from the start and the end\n      .replace(/,$/g, \"\"); // remove comma from the end\n  },\n\n  formatAmount(n: number, currency?: string) {\n    const formatter = new Intl.NumberFormat(i18n.language, {\n      style: \"currency\",\n      currency: currency || \"EUR\",\n    });\n    return formatter.format(n);\n  },\n\n  dateToString(date?: Date) {\n    return date && date.toLocaleDateString();\n  },\n\n  getTime(mins: number) {\n    const hours = Math.floor(mins / 60);\n    const minutes = mins % 60;\n\n    const time =\n      (hours < 10 ? \"0\" : \"\") +\n      hours +\n      \":\" +\n      (minutes < 10 ? \"0\" : \"\") +\n      minutes;\n    return dayjs(time, \"HH:mm\");\n  },\n\n  formatPorcentage(value: number) {\n    return (\n      typeof value !== \"undefined\" &&\n      value.toLocaleString(undefined, { minimumFractionDigits: 2 }) + \" %\"\n    );\n  },\n\n  roundFormatPorcentage(value: number) {\n    return (\n      typeof value !== \"undefined\" &&\n      Math.sign(value) * Math.floor(Math.abs(value) + 0.5) + \" %\"\n    );\n  },\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,IAAI,KAAM,cAAc,CAE/B,cAAe,CACbC,qBAAqBA,CAACC,IAAiB,CAAE,CACvC,GAAI,CAAAC,KAAK,CAAGD,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC,CAC7B,MAAO,CAAAD,KAAK,CACTE,OAAO,CAACH,IAAI,CAACE,MAAM,CAAC,MAAM,CAAC,CAAE,EAAE,CAAE;AAAA,CACjCC,OAAO,CAAC,QAAQ,CAAE,GAAG,CAAE;AAAA,CACvBC,IAAI,CAAC,CAAE;AAAA,CACPD,OAAO,CAAC,QAAQ,CAAE,EAAE,CAAE;AAAA,CACtBA,OAAO,CAAC,KAAK,CAAE,EAAE,CAAE;AAAA,CACnBA,OAAO,CAAC,MAAM,CAAE,EAAE,CAAE;AAAA,CACpBC,IAAI,CAAC,CAAE;AAAA,CACPD,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,CAAE;AACzB,CAAC,CAEDE,YAAYA,CAACC,CAAS,CAAEC,QAAiB,CAAE,CACzC,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAC,IAAI,CAACC,YAAY,CAACZ,IAAI,CAACa,QAAQ,CAAE,CACrDC,KAAK,CAAE,UAAU,CACjBL,QAAQ,CAAEA,QAAQ,EAAI,KACxB,CAAC,CAAC,CACF,MAAO,CAAAC,SAAS,CAACN,MAAM,CAACI,CAAC,CAAC,CAC5B,CAAC,CAEDO,YAAYA,CAACb,IAAW,CAAE,CACxB,MAAO,CAAAA,IAAI,EAAIA,IAAI,CAACc,kBAAkB,CAAC,CAAC,CAC1C,CAAC,CAEDC,OAAOA,CAACC,IAAY,CAAE,CACpB,KAAM,CAAAC,KAAK,CAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAG,EAAE,CAAC,CACnC,KAAM,CAAAI,OAAO,CAAGJ,IAAI,CAAG,EAAE,CAEzB,KAAM,CAAAK,IAAI,CACR,CAACJ,KAAK,CAAG,EAAE,CAAG,GAAG,CAAG,EAAE,EACtBA,KAAK,CACL,GAAG,EACFG,OAAO,CAAG,EAAE,CAAG,GAAG,CAAG,EAAE,CAAC,CACzBA,OAAO,CACT,MAAO,CAAAvB,KAAK,CAACwB,IAAI,CAAE,OAAO,CAAC,CAC7B,CAAC,CAEDC,gBAAgBA,CAACC,KAAa,CAAE,CAC9B,MACE,OAAO,CAAAA,KAAK,GAAK,WAAW,EAC5BA,KAAK,CAACC,cAAc,CAACC,SAAS,CAAE,CAAEC,qBAAqB,CAAE,CAAE,CAAC,CAAC,CAAG,IAAI,CAExE,CAAC,CAEDC,qBAAqBA,CAACJ,KAAa,CAAE,CACnC,MACE,OAAO,CAAAA,KAAK,GAAK,WAAW,EAC5BL,IAAI,CAACU,IAAI,CAACL,KAAK,CAAC,CAAGL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACW,GAAG,CAACN,KAAK,CAAC,CAAG,GAAG,CAAC,CAAG,IAAI,CAE/D,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}