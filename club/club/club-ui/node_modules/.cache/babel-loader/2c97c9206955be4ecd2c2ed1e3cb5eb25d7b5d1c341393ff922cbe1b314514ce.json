{"ast":null,"code":"import ClientList from\"components/clientList/ClientList\";import _ from\"lodash\";import{useEffect,useState}from\"react\";import{Rest}from\"utils/utils\";import{jsx as _jsx}from\"react/jsx-runtime\";const ClientesContainer=()=>{const[personasInfo,setPersonasInfo]=useState([]);const[filtersCollapsed,setFiltersCollapsed]=useState(true);const[lastFilter,setLastFilter]=useState();const[filterKey,setFilterKey]=useState(new Date().getTime());const onCollapseFilters=()=>{setFiltersCollapsed(!filtersCollapsed);};const applyFilters=form=>{const values=form.getFieldsValue();setLastFilter(values);setFiltersCollapsed(true);};const resetFilters=()=>{setLastFilter(undefined);setFilterKey(new Date().getTime());};useEffect(()=>{loadData();},[]);const loadData=page=>{const filter={};if(lastFilter){filter.namePerson=lastFilter.namePerson?lastFilter.namePerson:undefined;filter.valuePhone=lastFilter.valuePhone?lastFilter.valuePhone:undefined;}Rest().operation({type:\"SelectPatientList\",...filter}).then(response=>{for(var i=0;i<response.length;i++){response[i][\"key\"]=i;}response.sort((a,b)=>{let nameA=a.namePerson.toUpperCase();let nameB=b.namePerson.toUpperCase();if(nameA<nameB){return-1;}if(nameA>nameB){return 1;}return 0;});setPersonasInfo(response);});};useEffect(()=>{loadData();},[lastFilter]);const searchNamePerson=_.debounce(value=>doSearchNamePerson(value),500);const doSearchNamePerson=value=>{if(value.length<3){return;}};const searchPhone=_.debounce(value=>doSearchPhone(value),500);const doSearchPhone=value=>{if(value.length<3){return;}};return/*#__PURE__*/_jsx(ClientList,{onCollapseFilters:onCollapseFilters,applyFilters:applyFilters,resetFilters:resetFilters,searchNamePerson:searchNamePerson,searchPhone:searchPhone,Personasinfo:personasInfo,filtersCollapsed:filtersCollapsed,filterKey:filterKey});};export default ClientesContainer;","map":{"version":3,"names":["ClientList","_","useEffect","useState","Rest","jsx","_jsx","ClientesContainer","personasInfo","setPersonasInfo","filtersCollapsed","setFiltersCollapsed","lastFilter","setLastFilter","filterKey","setFilterKey","Date","getTime","onCollapseFilters","applyFilters","form","values","getFieldsValue","resetFilters","undefined","loadData","page","filter","namePerson","valuePhone","operation","type","then","response","i","length","sort","a","b","nameA","toUpperCase","nameB","searchNamePerson","debounce","value","doSearchNamePerson","searchPhone","doSearchPhone","Personasinfo"],"sources":["/home/gpt2008/Desktop/Clubs/club/club/dentycard-policlinico-bo-ui/src/pages/clients/Clientes.tsx"],"sourcesContent":["import { FormInstance } from \"antd\";\nimport ClientList from \"components/clientList/ClientList\";\nimport _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { Personasinfo } from \"types/entities/PersonasInfo\";\nimport { Rest } from \"utils/utils\";\n\nconst ClientesContainer = () => {\n\tconst [personasInfo, setPersonasInfo] = useState<Personasinfo[]>([]);\n\n\tconst [filtersCollapsed, setFiltersCollapsed] = useState(true);\n\tconst [lastFilter, setLastFilter] = useState<any>();\n\tconst [filterKey, setFilterKey] = useState(new Date().getTime());\n\n\tconst onCollapseFilters = () => {\n\t\tsetFiltersCollapsed(!filtersCollapsed);\n\t};\n\n\tconst applyFilters = (form: FormInstance) => {\n\t\tconst values = form.getFieldsValue();\n\t\tsetLastFilter(values);\n\t\tsetFiltersCollapsed(true);\n\t};\n\n\tconst resetFilters = () => {\n\t\tsetLastFilter(undefined);\n\t\tsetFilterKey(new Date().getTime());\n\t};\n\n\tuseEffect(() => {\n\t\tloadData();\n\t}, []);\n\n\tconst loadData = (page?: number) => {\n\t\tconst filter = {} as any;\n\n\t\tif (lastFilter) {\n\t\t\tfilter.namePerson = lastFilter.namePerson ? lastFilter.namePerson : undefined;\n\t\t\tfilter.valuePhone = lastFilter.valuePhone ? lastFilter.valuePhone : undefined;\n\t\t}\n\n\t\tRest<{ type: string }, any[]>()\n\t\t\t.operation({\n\t\t\t\ttype: \"SelectPatientList\",\n\t\t\t\t...filter,\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tfor (var i = 0; i < response.length; i++) {\n\t\t\t\t\tresponse[i][\"key\"] = i;\n\t\t\t\t}\n\n\t\t\t\tresponse.sort((a, b) => {\n\t\t\t\t\tlet nameA = a.namePerson.toUpperCase();\n\t\t\t\t\tlet nameB = b.namePerson.toUpperCase();\n\t\t\t\t\tif (nameA < nameB) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tif (nameA > nameB) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t\tsetPersonasInfo(response);\n\t\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tloadData();\n\t}, [lastFilter]);\n\n\tconst searchNamePerson = _.debounce((value: string) => doSearchNamePerson(value), 500);\n\tconst doSearchNamePerson = (value: string) => {\n\t\tif (value.length < 3) {\n\t\t\treturn;\n\t\t}\n\t};\n\n\tconst searchPhone = _.debounce((value: string) => doSearchPhone(value), 500);\n\tconst doSearchPhone = (value: string) => {\n\t\tif (value.length < 3) {\n\t\t\treturn;\n\t\t}\n\t};\n\n\treturn (\n\t\t\t<ClientList\n\t\t\t\tonCollapseFilters={onCollapseFilters}\n\t\t\t\tapplyFilters={applyFilters}\n\t\t\t\tresetFilters={resetFilters}\n\t\t\t\tsearchNamePerson={searchNamePerson}\n\t\t\t\tsearchPhone={searchPhone}\n\t\t\t\tPersonasinfo={personasInfo}\n\t\t\t\tfiltersCollapsed={filtersCollapsed}\n\t\t\t\tfilterKey={filterKey}></ClientList>\n\t);\n};\n\nexport default ClientesContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}