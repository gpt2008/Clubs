{"ast":null,"code":"import React from\"react\";import{withTranslation}from\"react-i18next\";import{Rest}from\"utils/utils\";import View from\"./ServicePortfolioForm\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";class ServicePortfolioFormContainer extends React.Component{constructor(){super(...arguments);this.state={};this.loadData=()=>{Rest().operation({type:\"SelectServicePortfolioById\",id:this.props.idPortfolio}).then(response=>{this.setState({portfolio:response,loaded:true});});};this.validateAndSave=form=>{form.validateFields().then(values=>{this.save(values);});};this.save=values=>{Rest().operation({type:this.props.idPortfolio?\"EditPortfolio\":\"NewPortfolio\",idPortfolio:this.props.idPortfolio,namePortfolio:values.namePortfolio,descPortfolio:values.descPortfolio}).then(response=>this.props.onClose(true));};}componentDidMount(){if(this.props.idPortfolio){this.loadData();}else{this.setState({loaded:true});}}render(){return this.state.loaded?/*#__PURE__*/_jsx(View,{...this.state,visible:this.props.visible,namePortfolio:this.props.namePortfolio,onCancel:()=>this.props.onClose(false),onSubmit:this.validateAndSave}):/*#__PURE__*/_jsx(_Fragment,{});}}export default withTranslation(\"portfolioForm\")(ServicePortfolioFormContainer);","map":{"version":3,"names":["React","withTranslation","Rest","View","jsx","_jsx","Fragment","_Fragment","ServicePortfolioFormContainer","Component","constructor","arguments","state","loadData","operation","type","id","props","idPortfolio","then","response","setState","portfolio","loaded","validateAndSave","form","validateFields","values","save","namePortfolio","descPortfolio","onClose","componentDidMount","render","visible","onCancel","onSubmit"],"sources":["/home/gpt2008/Desktop/Clubs/club/club/club-ui/src/pages/portfolios/ServicePortfolioFormContainer.tsx"],"sourcesContent":["import { FormInstance } from \"antd\";\nimport { Store } from \"antd/lib/form/interface\";\nimport React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport Portfolio from \"types/entities/Portfolio\";\nimport { Rest } from \"utils/utils\";\nimport View from \"./ServicePortfolioForm\";\n\ninterface IProps {\n\tvisible?: boolean;\n\tidPortfolio?: number;\n\tnamePortfolio?: string;\n\tonClose: (save: boolean, idPortfolio?: number, namePortfolio?: string) => void;\n}\n\nexport interface IState {\n\tportfolio?: Portfolio;\n\tloaded?: boolean;\n}\n\nclass ServicePortfolioFormContainer extends React.Component<WithTranslation & IProps, IState> {\n\tpublic state: IState = {};\n\n\tpublic componentDidMount() {\n\t\tif (this.props.idPortfolio) {\n\t\t\tthis.loadData();\n\t\t} else {\n\t\t\tthis.setState({ loaded: true });\n\t\t}\n\t}\n\n\tpublic render() {\n\t\treturn this.state.loaded ? (\n\t\t\t<View\n\t\t\t\t{...this.state}\n\t\t\t\tvisible={this.props.visible}\n\t\t\t\tnamePortfolio={this.props.namePortfolio}\n\t\t\t\tonCancel={() => this.props.onClose(false)}\n\t\t\t\tonSubmit={this.validateAndSave}\n\t\t\t/>\n\t\t) : (\n\t\t\t<></>\n\t\t);\n\t}\n\n\tprivate loadData = () => {\n\t\tRest<{ type: string; id: number }, Portfolio>()\n\t\t\t.operation({\n\t\t\t\ttype: \"SelectServicePortfolioById\",\n\t\t\t\tid: this.props.idPortfolio!,\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({ portfolio: response, loaded: true });\n\t\t\t});\n\t};\n\n\tprivate validateAndSave = (form: FormInstance) => {\n\t\tform.validateFields().then((values) => {\n\t\t\tthis.save(values);\n\t\t});\n\t};\n\n\tprivate save = (values: Store) => {\n\t\tRest<\n\t\t\t{\n\t\t\t\ttype: string;\n\t\t\t\tidPortfolio?: number;\n\t\t\t\tnamePortfolio: string;\n\t\t\t\tdescPortfolio: string;\n\t\t\t},\n\t\t\tany\n\t\t>()\n\t\t\t.operation({\n\t\t\t\ttype: this.props.idPortfolio ? \"EditPortfolio\" : \"NewPortfolio\",\n\t\t\t\tidPortfolio: this.props.idPortfolio,\n\t\t\t\tnamePortfolio: values.namePortfolio,\n\t\t\t\tdescPortfolio: values.descPortfolio,\n\t\t\t})\n\t\t\t.then((response) => this.props.onClose(true));\n\t};\n}\n\nexport default withTranslation(\"portfolioForm\")(ServicePortfolioFormContainer);\n"],"mappings":"AAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAA0BC,eAAe,KAAQ,eAAe,CAEhE,OAASC,IAAI,KAAQ,aAAa,CAClC,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAc1C,KAAM,CAAAC,6BAA6B,QAAS,CAAAR,KAAK,CAACS,SAA4C,CAAAC,YAAA,WAAAC,SAAA,OACtFC,KAAK,CAAW,CAAC,CAAC,MAwBjBC,QAAQ,CAAG,IAAM,CACxBX,IAAI,CAA0C,CAAC,CAC7CY,SAAS,CAAC,CACVC,IAAI,CAAE,4BAA4B,CAClCC,EAAE,CAAE,IAAI,CAACC,KAAK,CAACC,WAChB,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,EAAK,CACnB,IAAI,CAACC,QAAQ,CAAC,CAAEC,SAAS,CAAEF,QAAQ,CAAEG,MAAM,CAAE,IAAK,CAAC,CAAC,CACrD,CAAC,CAAC,CACJ,CAAC,MAEOC,eAAe,CAAIC,IAAkB,EAAK,CACjDA,IAAI,CAACC,cAAc,CAAC,CAAC,CAACP,IAAI,CAAEQ,MAAM,EAAK,CACtC,IAAI,CAACC,IAAI,CAACD,MAAM,CAAC,CAClB,CAAC,CAAC,CACH,CAAC,MAEOC,IAAI,CAAID,MAAa,EAAK,CACjCzB,IAAI,CAQF,CAAC,CACDY,SAAS,CAAC,CACVC,IAAI,CAAE,IAAI,CAACE,KAAK,CAACC,WAAW,CAAG,eAAe,CAAG,cAAc,CAC/DA,WAAW,CAAE,IAAI,CAACD,KAAK,CAACC,WAAW,CACnCW,aAAa,CAAEF,MAAM,CAACE,aAAa,CACnCC,aAAa,CAAEH,MAAM,CAACG,aACvB,CAAC,CAAC,CACDX,IAAI,CAAEC,QAAQ,EAAK,IAAI,CAACH,KAAK,CAACc,OAAO,CAAC,IAAI,CAAC,CAAC,CAC/C,CAAC,EAxDMC,iBAAiBA,CAAA,CAAG,CAC1B,GAAI,IAAI,CAACf,KAAK,CAACC,WAAW,CAAE,CAC3B,IAAI,CAACL,QAAQ,CAAC,CAAC,CAChB,CAAC,IAAM,CACN,IAAI,CAACQ,QAAQ,CAAC,CAAEE,MAAM,CAAE,IAAK,CAAC,CAAC,CAChC,CACD,CAEOU,MAAMA,CAAA,CAAG,CACf,MAAO,KAAI,CAACrB,KAAK,CAACW,MAAM,cACvBlB,IAAA,CAACF,IAAI,KACA,IAAI,CAACS,KAAK,CACdsB,OAAO,CAAE,IAAI,CAACjB,KAAK,CAACiB,OAAQ,CAC5BL,aAAa,CAAE,IAAI,CAACZ,KAAK,CAACY,aAAc,CACxCM,QAAQ,CAAEA,CAAA,GAAM,IAAI,CAAClB,KAAK,CAACc,OAAO,CAAC,KAAK,CAAE,CAC1CK,QAAQ,CAAE,IAAI,CAACZ,eAAgB,CAC/B,CAAC,cAEFnB,IAAA,CAAAE,SAAA,GAAI,CACJ,CACF,CAqCD,CAEA,cAAe,CAAAN,eAAe,CAAC,eAAe,CAAC,CAACO,6BAA6B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}