{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useClosable;\nexports.pickClosable = pickClosable;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _CloseOutlined = _interopRequireDefault(require(\"@ant-design/icons/CloseOutlined\"));\nvar _pickAttrs = _interopRequireDefault(require(\"rc-util/lib/pickAttrs\"));\nfunction pickClosable(context) {\n  if (!context) {\n    return undefined;\n  }\n  return {\n    closable: context.closable,\n    closeIcon: context.closeIcon\n  };\n}\n/** Convert `closable` and `closeIcon` to config object */\nfunction useClosableConfig(closableCollection) {\n  const {\n    closable,\n    closeIcon\n  } = closableCollection || {};\n  return _react.default.useMemo(() => {\n    if (\n    // If `closable`, whatever rest be should be true\n    !closable && (closable === false || closeIcon === false || closeIcon === null)) {\n      return false;\n    }\n    if (closable === undefined && closeIcon === undefined) {\n      return null;\n    }\n    let closableConfig = {\n      closeIcon: typeof closeIcon !== 'boolean' && closeIcon !== null ? closeIcon : undefined\n    };\n    if (closable && typeof closable === 'object') {\n      closableConfig = Object.assign(Object.assign({}, closableConfig), closable);\n    }\n    return closableConfig;\n  }, [closable, closeIcon]);\n}\n/**\n * Assign object without `undefined` field. Will skip if is `false`.\n * This helps to handle both closableConfig or false\n */\nfunction assignWithoutUndefined() {\n  const target = {};\n  for (var _len = arguments.length, objList = new Array(_len), _key = 0; _key < _len; _key++) {\n    objList[_key] = arguments[_key];\n  }\n  objList.forEach(obj => {\n    if (obj) {\n      Object.keys(obj).forEach(key => {\n        if (obj[key] !== undefined) {\n          target[key] = obj[key];\n        }\n      });\n    }\n  });\n  return target;\n}\n/** Use same object to support `useMemo` optimization */\nconst EmptyFallbackCloseCollection = {};\nfunction useClosable(propCloseCollection, contextCloseCollection) {\n  let fallbackCloseCollection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EmptyFallbackCloseCollection;\n  // Align the `props`, `context` `fallback` to config object first\n  const propCloseConfig = useClosableConfig(propCloseCollection);\n  const contextCloseConfig = useClosableConfig(contextCloseCollection);\n  const mergedFallbackCloseCollection = _react.default.useMemo(() => Object.assign({\n    closeIcon: /*#__PURE__*/_react.default.createElement(_CloseOutlined.default, null)\n  }, fallbackCloseCollection), [fallbackCloseCollection]);\n  // Use fallback logic to fill the config\n  const mergedClosableConfig = _react.default.useMemo(() => {\n    // ================ Props First ================\n    // Skip if prop is disabled\n    if (propCloseConfig === false) {\n      return false;\n    }\n    if (propCloseConfig) {\n      return assignWithoutUndefined(mergedFallbackCloseCollection, contextCloseConfig, propCloseConfig);\n    }\n    // =============== Context Second ==============\n    // Skip if context is disabled\n    if (contextCloseConfig === false) {\n      return false;\n    }\n    if (contextCloseConfig) {\n      return assignWithoutUndefined(mergedFallbackCloseCollection, contextCloseConfig);\n    }\n    // ============= Fallback Default ==============\n    return !mergedFallbackCloseCollection.closable ? false : mergedFallbackCloseCollection;\n  }, [propCloseConfig, contextCloseConfig, mergedFallbackCloseCollection]);\n  // Calculate the final closeIcon\n  return _react.default.useMemo(() => {\n    if (mergedClosableConfig === false) {\n      return [false, null];\n    }\n    const {\n      closeIconRender\n    } = mergedFallbackCloseCollection;\n    const {\n      closeIcon\n    } = mergedClosableConfig;\n    let mergedCloseIcon = closeIcon;\n    if (mergedCloseIcon !== null && mergedCloseIcon !== undefined) {\n      // Wrap the closeIcon if needed\n      if (closeIconRender) {\n        mergedCloseIcon = closeIconRender(closeIcon);\n      }\n      // Wrap the closeIcon with aria props\n      const ariaProps = (0, _pickAttrs.default)(mergedClosableConfig, true);\n      if (Object.keys(ariaProps).length) {\n        mergedCloseIcon = /*#__PURE__*/_react.default.isValidElement(mergedCloseIcon) ? ( /*#__PURE__*/_react.default.cloneElement(mergedCloseIcon, ariaProps)) : ( /*#__PURE__*/_react.default.createElement(\"span\", Object.assign({}, ariaProps), mergedCloseIcon));\n      }\n    }\n    return [true, mergedCloseIcon];\n  }, [mergedClosableConfig, mergedFallbackCloseCollection]);\n}","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","useClosable","pickClosable","_react","_CloseOutlined","_pickAttrs","context","undefined","closable","closeIcon","useClosableConfig","closableCollection","useMemo","closableConfig","assign","assignWithoutUndefined","target","_len","arguments","length","objList","Array","_key","forEach","obj","keys","key","EmptyFallbackCloseCollection","propCloseCollection","contextCloseCollection","fallbackCloseCollection","propCloseConfig","contextCloseConfig","mergedFallbackCloseCollection","createElement","mergedClosableConfig","closeIconRender","mergedCloseIcon","ariaProps","isValidElement","cloneElement"],"sources":["/home/gpt2008/Desktop/Clubs/club/club/club-ui/node_modules/antd/lib/_util/hooks/useClosable.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useClosable;\nexports.pickClosable = pickClosable;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _CloseOutlined = _interopRequireDefault(require(\"@ant-design/icons/CloseOutlined\"));\nvar _pickAttrs = _interopRequireDefault(require(\"rc-util/lib/pickAttrs\"));\nfunction pickClosable(context) {\n  if (!context) {\n    return undefined;\n  }\n  return {\n    closable: context.closable,\n    closeIcon: context.closeIcon\n  };\n}\n/** Convert `closable` and `closeIcon` to config object */\nfunction useClosableConfig(closableCollection) {\n  const {\n    closable,\n    closeIcon\n  } = closableCollection || {};\n  return _react.default.useMemo(() => {\n    if (\n    // If `closable`, whatever rest be should be true\n    !closable && (closable === false || closeIcon === false || closeIcon === null)) {\n      return false;\n    }\n    if (closable === undefined && closeIcon === undefined) {\n      return null;\n    }\n    let closableConfig = {\n      closeIcon: typeof closeIcon !== 'boolean' && closeIcon !== null ? closeIcon : undefined\n    };\n    if (closable && typeof closable === 'object') {\n      closableConfig = Object.assign(Object.assign({}, closableConfig), closable);\n    }\n    return closableConfig;\n  }, [closable, closeIcon]);\n}\n/**\n * Assign object without `undefined` field. Will skip if is `false`.\n * This helps to handle both closableConfig or false\n */\nfunction assignWithoutUndefined() {\n  const target = {};\n  for (var _len = arguments.length, objList = new Array(_len), _key = 0; _key < _len; _key++) {\n    objList[_key] = arguments[_key];\n  }\n  objList.forEach(obj => {\n    if (obj) {\n      Object.keys(obj).forEach(key => {\n        if (obj[key] !== undefined) {\n          target[key] = obj[key];\n        }\n      });\n    }\n  });\n  return target;\n}\n/** Use same object to support `useMemo` optimization */\nconst EmptyFallbackCloseCollection = {};\nfunction useClosable(propCloseCollection, contextCloseCollection) {\n  let fallbackCloseCollection = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EmptyFallbackCloseCollection;\n  // Align the `props`, `context` `fallback` to config object first\n  const propCloseConfig = useClosableConfig(propCloseCollection);\n  const contextCloseConfig = useClosableConfig(contextCloseCollection);\n  const mergedFallbackCloseCollection = _react.default.useMemo(() => Object.assign({\n    closeIcon: /*#__PURE__*/_react.default.createElement(_CloseOutlined.default, null)\n  }, fallbackCloseCollection), [fallbackCloseCollection]);\n  // Use fallback logic to fill the config\n  const mergedClosableConfig = _react.default.useMemo(() => {\n    // ================ Props First ================\n    // Skip if prop is disabled\n    if (propCloseConfig === false) {\n      return false;\n    }\n    if (propCloseConfig) {\n      return assignWithoutUndefined(mergedFallbackCloseCollection, contextCloseConfig, propCloseConfig);\n    }\n    // =============== Context Second ==============\n    // Skip if context is disabled\n    if (contextCloseConfig === false) {\n      return false;\n    }\n    if (contextCloseConfig) {\n      return assignWithoutUndefined(mergedFallbackCloseCollection, contextCloseConfig);\n    }\n    // ============= Fallback Default ==============\n    return !mergedFallbackCloseCollection.closable ? false : mergedFallbackCloseCollection;\n  }, [propCloseConfig, contextCloseConfig, mergedFallbackCloseCollection]);\n  // Calculate the final closeIcon\n  return _react.default.useMemo(() => {\n    if (mergedClosableConfig === false) {\n      return [false, null];\n    }\n    const {\n      closeIconRender\n    } = mergedFallbackCloseCollection;\n    const {\n      closeIcon\n    } = mergedClosableConfig;\n    let mergedCloseIcon = closeIcon;\n    if (mergedCloseIcon !== null && mergedCloseIcon !== undefined) {\n      // Wrap the closeIcon if needed\n      if (closeIconRender) {\n        mergedCloseIcon = closeIconRender(closeIcon);\n      }\n      // Wrap the closeIcon with aria props\n      const ariaProps = (0, _pickAttrs.default)(mergedClosableConfig, true);\n      if (Object.keys(ariaProps).length) {\n        mergedCloseIcon = /*#__PURE__*/_react.default.isValidElement(mergedCloseIcon) ? ( /*#__PURE__*/_react.default.cloneElement(mergedCloseIcon, ariaProps)) : ( /*#__PURE__*/_react.default.createElement(\"span\", Object.assign({}, ariaProps), mergedCloseIcon));\n      }\n    }\n    return [true, mergedCloseIcon];\n  }, [mergedClosableConfig, mergedFallbackCloseCollection]);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}