{"ast":null,"code":"import React from\"react\";import{withTranslation}from\"react-i18next\";import{Rest}from\"utils/utils\";import View from\"./NomenclatorForm\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";class NomenclatorFormContainer extends React.Component{constructor(){super(...arguments);this.state={loaded:false,errorFields:[]};this.loadSpecialityData=inputValue=>{Rest().operation({type:\"GetEspecialidades\",filter:inputValue,idSpeciality:this.props.idSpeciality?this.props.idSpeciality:this.props.idSpecialitySelected}).then(response=>{this.setState({specialities:response});if(!inputValue){this.loadSubspecialityData();}});};this.filterOptionsSpeciality=inputValue=>{if(inputValue!==\"\"){this.loadSpecialityData(inputValue);}else{this.loadSpecialityData();}};this.loadSubspecialityData=inputValue=>{Rest().operation({type:\"GetSubespecialidades\",filter:inputValue,idSubspeciality:this.props.idSubspecialitySelectedSet?this.props.idSubspecialitySelectedSet:this.props.idSubspecialitySelected}).then(response=>{this.setState({subspecialities:response});if(!inputValue){this.loadActData();}});};this.filterOptionsSubspeciality=inputValue=>{if(inputValue!==\"\"){this.loadSubspecialityData(inputValue);}else{this.loadSpecialityData();}};this.loadActData=inputValue=>{Rest().operation({type:\"GetActos\",filter:inputValue,idAct:this.props.idActSelectedSet?this.props.idActSelectedSet:this.props.idActSelected}).then(response=>{this.setState({acts:response,loaded:true});});};this.filterOptionsAct=inputValue=>{if(inputValue!==\"\"){this.loadActData(inputValue);}else{this.loadActData();}};}componentDidMount(){if(this.props.visible){this.loadSpecialityData();}}render(){return this.state.loaded?/*#__PURE__*/_jsx(View,{...this.state,visible:this.props.visible,idSpeciality:this.props.idSpeciality?this.props.idSpeciality:this.props.idSubspecialitySelected,idSubspeciality:this.props.idSubspeciality?this.props.idSubspeciality:this.props.idSubspecialitySelected,idAct:this.props.idAct?this.props.idAct:this.props.idActSelected,nameSpeciality:this.props.nameSpecialitySelected,nameSubspeciality:this.props.nameSubspecialitySelected,nameAct:this.props.nameActSelected,onfilterOptionsSpeciality:this.filterOptionsSpeciality,onChangeSpeciality:this.props.onChangeSpeciality,onfilterOptionsSubspeciality:this.filterOptionsSubspeciality,onChangeSubspeciality:this.props.onChangeSubspeciality,onfilterOptionsAct:this.filterOptionsAct,onChangeAct:this.props.onChangeAct,onCancel:()=>this.props.onClose(false),onSubmit:this.props.check,modal:this.props.modal}):/*#__PURE__*/_jsx(_Fragment,{});}}export default withTranslation(\"nomenclatorForm\")(NomenclatorFormContainer);","map":{"version":3,"names":["React","withTranslation","Rest","View","jsx","_jsx","Fragment","_Fragment","NomenclatorFormContainer","Component","constructor","arguments","state","loaded","errorFields","loadSpecialityData","inputValue","operation","type","filter","idSpeciality","props","idSpecialitySelected","then","response","setState","specialities","loadSubspecialityData","filterOptionsSpeciality","idSubspeciality","idSubspecialitySelectedSet","idSubspecialitySelected","subspecialities","loadActData","filterOptionsSubspeciality","idAct","idActSelectedSet","idActSelected","acts","filterOptionsAct","componentDidMount","visible","render","nameSpeciality","nameSpecialitySelected","nameSubspeciality","nameSubspecialitySelected","nameAct","nameActSelected","onfilterOptionsSpeciality","onChangeSpeciality","onfilterOptionsSubspeciality","onChangeSubspeciality","onfilterOptionsAct","onChangeAct","onCancel","onClose","onSubmit","check","modal"],"sources":["/home/gpt2008/Desktop/Clubs/club/club/dentycard-policlinico-bo-ui/src/pages/nomenclator/NomenclatorFormContainer.tsx"],"sourcesContent":["import React from \"react\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport FormErrorField from \"utils/form/formErrorField\";\nimport { Rest } from \"utils/utils\";\nimport View from \"./NomenclatorForm\";\nimport SpecialityDetails from \"types/entities/Especialidad\";\nimport SubspecialityDetails from \"types/entities/SubEspecialidad\";\nimport ActDetails from \"types/entities/Actos\";\nimport { IState as IStateContainer } from \"./NomenclatorListContainer\";\n\ninterface IProps {\n\tvisible?: boolean;\n    onChangeSpeciality: (idSpecialitySelected?: number) => void;\n    onChangeSubspeciality: (idSubspecialitySelected?: number) => void;\n    onChangeAct: (idActSelected?: number) => void;\n    onClose: (save: boolean) => void;\n    check: () => void;\n    modal: boolean;\n\tidSpeciality?: number;\n\tidSubspeciality?: number;\n\tidAct?: number;\n}\nexport interface IState {\n\terrorFields: FormErrorField[];\n\tloaded?: boolean;\n    specialities?: SpecialityDetails[];\n    subspecialities?: SubspecialityDetails[];\n    acts?: ActDetails[];\n}\n\nclass NomenclatorFormContainer extends React.Component<WithTranslation & IProps & IStateContainer, IState> {\n\tpublic state: IState = {\n\t\tloaded: false,\n\t\terrorFields: [],\n\t};\n\n\tpublic componentDidMount() {\n\t\tif (this.props.visible) {\n\t\t\tthis.loadSpecialityData();\n\t\t}\n\t}\n\n\tpublic render() {\n\t\treturn this.state.loaded ? (\n\t\t\t<View\n\t\t\t\t{...this.state}\n\t\t\t\tvisible={this.props.visible}\n                idSpeciality={this.props.idSpeciality ? this.props.idSpeciality: this.props.idSubspecialitySelected}\n                idSubspeciality={this.props.idSubspeciality ? this.props.idSubspeciality: this.props.idSubspecialitySelected}\n                idAct={this.props.idAct ? this.props.idAct: this.props.idActSelected}\n                nameSpeciality={this.props.nameSpecialitySelected}\n                nameSubspeciality={this.props.nameSubspecialitySelected}\n                nameAct={this.props.nameActSelected}\n                onfilterOptionsSpeciality={this.filterOptionsSpeciality}\n                onChangeSpeciality = {this.props.onChangeSpeciality}\n                onfilterOptionsSubspeciality={this.filterOptionsSubspeciality}\n                onChangeSubspeciality = {this.props.onChangeSubspeciality}\n                onfilterOptionsAct={this.filterOptionsAct}\n                onChangeAct = {this.props.onChangeAct}\n\t\t\t\tonCancel={() => this.props.onClose(false)}\n\t\t\t\tonSubmit={this.props.check}\n                modal={this.props.modal}\n\t\t\t/>\n\t\t) : (\n\t\t\t<></>\n\t\t);\n\t}\n\n    private loadSpecialityData = (inputValue?:string) => {\n\t\tRest<{ type: string; filter?: string, idSpeciality?: number }, any>()\n\t\t\t.operation({\n\t\t\t\ttype: \"GetEspecialidades\",\n                filter: inputValue,\n\t\t\t\tidSpeciality: this.props.idSpeciality ? this.props.idSpeciality: this.props.idSpecialitySelected\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tspecialities: response,\n\t\t\t\t});\n                if(!inputValue){\n                    this.loadSubspecialityData();\n                }\n\t\t\t});\n\t};\n\n    private filterOptionsSpeciality =  (inputValue: string) => {\n        if (inputValue !== \"\") {\n\t\t\tthis.loadSpecialityData(inputValue);\n\t\t}\n        else{\n            this.loadSpecialityData();\n        }\n    };\n\n    private loadSubspecialityData = (inputValue?:string) => {\n\t\tRest<{ type: string; filter?: string, idSubspeciality?:number }, any>()\n\t\t\t.operation({\n\t\t\t\ttype: \"GetSubespecialidades\",\n                filter: inputValue,\n\t\t\t\tidSubspeciality: this.props.idSubspecialitySelectedSet ? this.props.idSubspecialitySelectedSet: this.props.idSubspecialitySelected\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsubspecialities: response,\n\t\t\t\t});\n                if(!inputValue){\n                    this.loadActData();\n                }\n\t\t\t});\n\t};\n\n    private filterOptionsSubspeciality =  (inputValue: string) => {\n        if (inputValue !== \"\") {\n\t\t\tthis.loadSubspecialityData(inputValue);\n\t\t}\n        else{\n            this.loadSpecialityData();\n        }\n    };\n    \n    private loadActData = (inputValue?:string) => {\n\t\tRest<{ type: string; filter?: string, idAct?: number}, any>()\n\t\t\t.operation({\n\t\t\t\ttype: \"GetActos\",\n                filter: inputValue,\n\t\t\t\tidAct: this.props.idActSelectedSet ? this.props.idActSelectedSet: this.props.idActSelected\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tacts: response,\n\t\t\t\t\tloaded: true,\n\t\t\t\t});\n\t\t\t});\n\t};\n\n    private filterOptionsAct =  (inputValue: string) => {\n        if (inputValue !== \"\") {\n\t\t\tthis.loadActData(inputValue);\n\t\t}\n        else{\n            this.loadActData();\n        }\n    };\n\n}\n\nexport default withTranslation(\"nomenclatorForm\")(NomenclatorFormContainer);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}