{"ast":null,"code":"import React from\"react\";import{withTranslation}from\"react-i18next\";import{Rest}from\"utils/utils\";import View from\"./CarterasForm\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";class CarteraFormContainer extends React.Component{constructor(){super(...arguments);this.state={loaded:false,errorFields:[],speciality:[]};this.validateAndSave=form=>{form.validateFields().then(values=>{this.internalValidation(values,true);}).catch(info=>{this.internalValidation(info.values,false);});};this.internalValidation=(values,formValidationSucceded)=>{var _this$validate;(_this$validate=this.validate(values))===null||_this$validate===void 0?void 0:_this$validate.then(errors=>{if(formValidationSucceded&&(!errors||errors.length===0)){this.save(values);}else{this.setState({errorFields:errors});}});};this.validate=values=>{return new Promise(resolve=>{let errors=[];resolve(errors);});};this.save=async values=>{Rest().operation({type:this.props.idCartera?\"EditCartera\":\"NewCartera\",idCartera:this.props.idCartera,nameCartera:values.nameCartera,idEspecialidad:values.nameGarantia}).then(()=>this.props.onClose(true));};}componentDidMount(){this.setState({loaded:true});}render(){return this.state.loaded?/*#__PURE__*/_jsx(View,{visible:this.props.visible,idCartera:this.props.idCartera,nameCartera:this.props.nameCartera,nameGarantia:this.props.nameGarantia,speciality:this.props.speciality,filterOptions:this.props.filterOptions,onChangeSearch:this.props.onChangeSearch,idGarantia:this.props.idGarantiaSelectedSet?this.props.idGarantiaSelectedSet:this.props.idGarantiaSelected,onCancel:()=>this.props.onClose(false),onSubmit:this.validateAndSave}):/*#__PURE__*/_jsx(_Fragment,{});}}export default withTranslation(\"carterasForm\")(CarteraFormContainer);","map":{"version":3,"names":["React","withTranslation","Rest","View","jsx","_jsx","Fragment","_Fragment","CarteraFormContainer","Component","constructor","arguments","state","loaded","errorFields","speciality","validateAndSave","form","validateFields","then","values","internalValidation","catch","info","formValidationSucceded","_this$validate","validate","errors","length","save","setState","Promise","resolve","operation","type","props","idCartera","nameCartera","idEspecialidad","nameGarantia","onClose","componentDidMount","render","visible","filterOptions","onChangeSearch","idGarantia","idGarantiaSelectedSet","idGarantiaSelected","onCancel","onSubmit"],"sources":["/home/gpt2008/Desktop/Clubs/club/club/dentycard-policlinico-bo-ui/src/pages/carteras/CarterasFormContainer.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { FormInstance } from \"antd/es/form/Form\";\nimport { Store } from \"antd/lib/form/interface\";\nimport { WithTranslation, withTranslation } from \"react-i18next\";\nimport FormErrorField from \"utils/form/formErrorField\";\nimport { Rest } from \"utils/utils\";\nimport View from \"./CarterasForm\";\nimport {IState as IStateContainer} from \"./CarterasListContainer\";\nimport SpecialityDetails from \"types/entities/Especialidad\";\n\ninterface IProps {\n\tvisible?: boolean;\n\tidCartera?: number;\n\tnameCartera?: string;\n\tnameGarantia?: string;\n\tspeciality: SpecialityDetails[];\n\tfilterOptions: (inputValue: string) => void;\n\tonChangeSearch: (idGarantia?: number) => void;\n\tonClose: (save: boolean) => void;\n}\nexport interface IState {\n    errorFields: FormErrorField[];\n\tloaded?: boolean;\n\tspeciality: SpecialityDetails[];\n}\n\nclass CarteraFormContainer extends React.Component<WithTranslation & IProps & IStateContainer> {\n\tpublic state: IState = {\n        loaded: false,\n\t\terrorFields: [],\n\t\tspeciality: []\n\t};\n\n\tpublic componentDidMount() {\n\t\tthis.setState({\n            loaded: true,\n    \t});\n\t}\n\t\n\tpublic render() {\n\t\treturn this.state.loaded ? (\n\t\t\t<View\n\t\t\t\tvisible={this.props.visible}\n\t\t\t\tidCartera={this.props.idCartera}\n\t\t\t\tnameCartera={this.props.nameCartera}\n                nameGarantia={this.props.nameGarantia}\n\t\t\t\tspeciality={this.props.speciality}\n\t\t\t\tfilterOptions={this.props.filterOptions}\n\t\t\t\tonChangeSearch={this.props.onChangeSearch}\n\t\t\t\tidGarantia={this.props.idGarantiaSelectedSet ? this.props.idGarantiaSelectedSet : this.props.idGarantiaSelected}\n\t\t\t\tonCancel={() => this.props.onClose(false)}\n\t\t\t\tonSubmit={this.validateAndSave}\n\t\t\t/>\n\t\t) : (\n\t\t\t<></>\n\t\t);\n\t}\n\n    private validateAndSave = (form: FormInstance) => {\n\t\tform\n\t\t\t.validateFields()\n\t\t\t.then((values) => {\n\t\t\t\tthis.internalValidation(values, true);\n\t\t\t})\n\t\t\t.catch((info) => {\n\t\t\t\tthis.internalValidation(info.values, false);\n\t\t\t});\n\t};\n\n\tprivate internalValidation = (values: Store, formValidationSucceded: boolean) => {\n\t\tthis.validate(values)?.then((errors) => {\n\t\t\tif (formValidationSucceded && (!errors || errors.length === 0)) {\n\t\t\t\tthis.save(values);\n\t\t\t} else {\n\t\t\t\tthis.setState({ errorFields: errors });\n\t\t\t}\n\t\t});\n\t};\n\n\tprivate validate = (values: Store) => {\n\t\treturn new Promise((resolve: (f: FormErrorField[]) => void) => {\n\t\t\tlet errors: FormErrorField[] = [];\n\n\t\t\tresolve(errors);\n\t\t});\n\t};\n\n\tprivate save = async (values: Store) => {\n\n                Rest<\n                {\n                    type: string;\n                    idCartera?: number;\n                    nameCartera?:string;\n                    idEspecialidad?: number;\n                },\n                any\n                >()\n                .operation({\n                    type: this.props.idCartera ? \"EditCartera\" : \"NewCartera\",\n                    idCartera: this.props.idCartera,\n                    nameCartera: values.nameCartera,\n                    idEspecialidad: values.nameGarantia\n                })\n                .then(() => this.props.onClose(true));\n\t\t\n\t};\n}\n\nexport default withTranslation(\"carterasForm\")(CarteraFormContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}